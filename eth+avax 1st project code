// SPDX-License-Identifier: Unlicensed
pragma solidity >=0.7.0;

contract ErrorHandling {
    address public satiksha;
    uint public count;

    constructor() {
        satiksha = msg.sender;
    }

    // Function using require() to check a condition
    function call() public {
        count++;
        require(msg.sender == satiksha, "Caller is not satiksha");
    }

    // Function using assert() to verify invariants
    function incrementCount() public {
        count++;
        assert(count > 0); // This should always be true after incrementing
    }

    // Function using revert() for custom error handling
    function resetCount() public {
        if (msg.sender != satiksha) {
            revert("Caller is not satiksha, cannot reset count");
        }
        count = 0;
    }

    
